/**
* require dependencies
*/
var app= require('../server');
var debug = require('debug')('mean-app:server');
var http = require('http');


/**
* get port frome enviroment or set default port
*/
var port= process.env.PORT || 3000;

app.set('port', port);

/**
* listining on the port
*/
app.listen(port, function(err){
    if(err){
        onError();
    }
    onListening();
})

/**
 * Event listener for HTTP server "error" event.
 */

function onError(error) {
  if (error.syscall !== 'listen') {
    throw error;
  }

  var bind = typeof port === 'string'
    ? 'Pipe ' + port
    : 'Port ' + port;

  // handle specific listen errors with friendly messages
  switch (error.code) {
    case 'EACCES':
      console.error(bind + ' requires elevated privileges');
      process.exit(1);
      break;
    case 'EADDRINUSE':
      console.error(bind + ' is already in use');
      process.exit(1);
      break;
    default:
      throw error;
  }
}

/**
 * Event listener for HTTP server "listening" event.
 */

function onListening() {
  var addr = "http://localhost:3000/"
  var bind = typeof addr === 'string'
    ? 'pipe ' + addr
    : 'port ' + addr.port;
  debug('Listening on ' + bind);
}